####
# Default job.
# This job simply defines the android image, some environment variables
# and stuff that all jobs should have
##
default: &defaultJob
  # The docker image all jobs that inherit from us will have (Which should be all of them)
  docker:
      - image: circleci/android:api-28
##
# We define a job for building. This job will be in charge of running:
# - Run code analysis for a specific module
# - Run tests for a specific module
# - Run an assemble for a specific module
# - Run a build analysis for a specific module
# - Specifying a place for storing artifacts and test results.
##
build-job: &buildJob
  # It will inherit the defaultJob.
    <<: *defaultJob
steps:
      # Checkout to our repo
      - checkout
      # Restore the cache if a hashed build.gradle is found as key
      - restore_cache:
          key: buildscript-cache-{{ checksum "build.gradle" }}
      - restore_cache:
          key: gradlew-cache-{{ checksum "./gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: dependencies-cach-{{ checksum "core/build.gradle" }}-{{ checksum "app/build.gradle" }}
      - run:
          name: Run Tests
          command: ./gradlew lint test
      # Save the cache for this build.gradle
      - save_cache:
          paths:
          - ~/.gradle
          key: buildscript-cache-{{ checksum "build.gradle" }}
      - save_cache:
          paths:
          - ./gradle/wrapper/
          key: gradlew-cache-{{ checksum "./gradle/wrapper/gradle-wrapper.properties" }}
      - save_cache:
          paths:
          - ./.gradle
          - ~/.android/build-cache/
          key: dependencies-cach-{{ checksum "core/build.gradle" }}-{{ checksum "app/build.gradle" }}
      - store_artifacts:
          path: app/build/reports
      - store_test_results:
          path: app/build/test-results

##
# Create our jobs, making them inherit from the defined jobs
# The ones that will inherit from buildJob need to create the environment variable
# MODULE. Check the steps defined for that job so you understand why :)
##
version: 2
jobs:
  build:
     core:
       <<: *buildJob
       environment:
         MODULE: core
     app:
       <<: *buildJob
       environment:
         MODULE: app
